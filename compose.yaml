services:
  mirakurun:
    image: chinachu/mirakurun:3.8.0
    cap_add:
      - SYS_ADMIN
      - SYS_NICE
    environment:
      TZ: Asia/Tokyo
      DOCKER_NETWORK: host
      # LOG_LEVEL: "3"
      # DEBUG: "true"
    network_mode: host
    ports:
      - 40772:40772
      - 9229:9229
    devices:
      - /dev/bus:/dev/bus
      - /dev/dvb:/dev/dvb
    volumes:
      - /mnt/dtv/mirakurun/conf:/app-config
      - /mnt/dtv/mirakurun/data:/app-data
    restart: always
    logging:
      driver: json-file
      options:
        max-file: "1"
        max-size: 10m

  nginx:
    build:
      context: .
      dockerfile: docker/nginx/Dockerfile
    network_mode: host
    ports:
      - 8080:8080
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    restart: always
    logging:
      driver: json-file
      options:
        max-file: "1"
        max-size: 10m

  mysql:
    image: mysql:8.4.0
    network_mode: host
    ports:
      - 3306:3306
    volumes:
      - mysql-db:/var/lib/mysql
      - ./mysql/my.cnf:/etc/mysql/conf.d/my.cnf
    environment:
      MYSQL_USER: epgstation_user
      MYSQL_PASSWORD: epgstation_passwd
      MYSQL_ROOT_PASSWORD: epgstation_root_passwd
      MYSQL_DATABASE: epgstation
      TZ: "Asia/Tokyo"
    restart: always
    logging:
      options:
        max-file: "3"
        max-size: 10m

  epgstation:
    build:
      context: .
      dockerfile: docker/epgstation/Dockerfile
    network_mode: host
    ports:
      - 8888:8888
      - 8889:8889
    volumes:
      - ./epgstation/config:/app/config
      - ./epgstation/extra:/extra
      - /mnt/dtv/epgstation/data:/app/data
      - /mnt/dtv/epgstation/drop:/app/drop
      - /mnt/dtv/epgstation/thumbnail:/app/thumbnail
      - /mnt/dtv/epgstation/logs:/app/logs
      - /mnt/dtv/epgstation/recorded:/app/recorded
    environment:
      TZ: "Asia/Tokyo"
    depends_on:
      - mirakurun
      - mysql
    restart: always
    logging:
      driver: json-file
      options:
        max-file: "3"
        max-size: 10m

  cloudflared:
    image: cloudflare/cloudflared:2024.6.0
    command: tunnel --no-autoupdate run
    environment:
      TUNNEL_TOKEN: ${TUNNEL_TOKEN}
    network_mode: host
    restart: always
    logging:
      driver: json-file
      options:
        max-file: "1"
        max-size: 10m

  newrelic:
    image: newrelic/infrastructure:1.52.3
    cap_add:
      - SYS_PTRACE
    environment:
      TZ: Asia/Tokyo
      DOCKER_NETWORK: host
      NRIA_LICENSE_KEY: ${NRIA_LICENSE_KEY}
    network_mode: host
    pid: host
    privileged: true
    volumes:
      - type: bind
        source: /
        target: /host
        read_only: true
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
      - type: bind
        source: ./newrelic/newrelic-infra
        target: /etc/newrelic-infra
    restart: always
    logging:
      driver: json-file
      options:
        max-file: "1"
        max-size: 10m

volumes:
  mysql-db:
    driver: local
